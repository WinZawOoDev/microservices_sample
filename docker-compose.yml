version: "3.8"

services:
  gateway:
    build: ./gateway
    ports:
      - 3000:3000
    volumes:
      - ./gateway:/usr/src/app
    restart: unless-stopped
    networks:
      - node-network
    depends_on:
      - user
  user:
    build: ./user
    ports:
      - 3001:3000
    volumes:
      - ./user:/usr/src/app
    restart: unless-stopped
    networks:
      - node-network
    depends_on:
      - db
    links:
      - "db"
  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
    networks:
      - node-network
  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    expose:
      - "9093"
    networks:
      - node-network
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  db:
    image: postgres
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - node-network
volumes:
  postgres:
    driver: local
networks:
  node-network:
    driver: bridge
